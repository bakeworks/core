{"version":3,"sources":["../../src/util/random.js"],"names":["number","int","max","Number","MAX_SAFE_INTEGER","Math","round","random","intBetween","min","element","array","randomInt","length","property","obj","keys","Object","shuffle","arg","isString","result","split","slice","m","i","tmp","join","uuid","h","HEX_DIGITS"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,UAAnB;;AAEA,SAASC,GAAT,GAA4C;AAAA,MAA/BC,GAA+B,uEAAzBC,OAAOC,gBAAkB;;AAC1C,SAAOC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgBL,GAA3B,CAAP;AACD;;AAED,SAASM,UAAT,CAAoBC,GAApB,EAAyBP,GAAzB,EAA8B;AAC5B,MAAIO,MAAMP,GAAV,EAAe,OAAOM,WAAWN,GAAX,EAAgBO,GAAhB,CAAP;AACf,SAAOA,MAAMJ,KAAKC,KAAL,CAAWD,KAAKE,MAAL,MAAiBL,MAAMO,GAAvB,CAAX,CAAb;AACD;;AAED,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,SAAOA,MAAMC,UAAUD,MAAME,MAAhB,CAAN,CAAP;AACD;;AAED,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,MAAMC,OAAOC,OAAOD,IAAP,CAAYD,GAAZ,CAAb;AACA,SAAOA,IAAIL,QAAQM,IAAR,CAAJ,CAAP;AACD;;AAED;AACA;AACA,SAASE,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,MAAMC,WAAW,OAAOD,GAAP,KAAe,QAAhC;AACA,MAAME,SAASD,WAAWD,IAAIG,KAAJ,CAAU,EAAV,CAAX,GAA2BH,IAAII,KAAJ,CAAU,CAAV,CAA1C;AACA,MAAIC,IAAIH,OAAOR,MAAf;AAAA,MAAuBY,UAAvB;AAAA,MAA0BC,YAA1B;AACA,SAAOF,CAAP,EAAU;AACRC,QAAMpB,KAAKE,MAAL,KAAgBiB,GAAjB,KAA0B,CAA/B,CADQ,CAC0B;AAClCE,UAAML,OAAOG,CAAP,CAAN;AACAH,WAAOG,CAAP,IAAYH,OAAOI,CAAP,CAAZ;AACAJ,WAAOI,CAAP,IAAYC,GAAZ;AACD;AACD,SAAON,WAAWC,OAAOM,IAAP,CAAY,EAAZ,CAAX,GAA6BN,MAApC;AACD;;AAED,SAASO,IAAT,GAA2B;AAAA,MAAbf,MAAa,uEAAJ,EAAI;;AACzB,MAAIe,OAAO,EAAX;AACA,MAAMC,IAAI7B,OAAO8B,UAAP,CAAkBjB,MAAlB,GAA2B,CAArC;AACA,OAAK,IAAIY,IAAI,CAAb,EAAgBA,IAAIZ,MAApB,EAA4BY,GAA5B,EAAiC;AAC/BG,YAAQ5B,OAAO8B,UAAP,CAAkBlB,UAAUiB,CAAV,CAAlB,CAAR;AACD;AACD,SAAOD,IAAP;AACD;;AAED,eAAe;AACb3B,UADa;AAEbO,wBAFa;AAGbE,kBAHa;AAIbI,oBAJa;AAKbI,kBALa;AAMbU;AANa,CAAf","file":"random.js","sourcesContent":["import number from './number'\n\nfunction int(max = Number.MAX_SAFE_INTEGER) {\n  return Math.round(Math.random() * max)  \n}\n\nfunction intBetween(min, max) {\n  if (min > max) return intBetween(max, min)\n  return min + Math.round(Math.random() * (max - min))  \n}\n\nfunction element(array) {\n  return array[randomInt(array.length)]\n}\n\nfunction property(obj) {\n  const keys = Object.keys(obj)\n  return obj[element(keys)]\n}\n\n// Argument may be an array or string (or indexable object with slice() method).\n// Returns a new array or string which is a shuffled version of the argument.\nfunction shuffle(arg) {\n  const isString = typeof arg === 'string'\n  const result = isString ? arg.split('') : arg.slice(0)\n  let m = result.length, i, tmp\n  while (m) {\n    i = ((Math.random() * m--) >>> 0) // faster than round?\n    tmp = result[m]\n    result[m] = result[i]\n    result[i] = tmp\n  }\n  return isString ? result.join('') : result\n}\n\nfunction uuid(length = 16) {\n  var uuid = ''\n  const h = number.HEX_DIGITS.length - 1\n  for (let i = 0; i < length; i++) {\n    uuid += number.HEX_DIGITS[randomInt(h)]\n  }\n  return uuid\n}\n\nexport default {\n  int,\n  intBetween,\n  element,\n  property,\n  shuffle,\n  uuid\n}"]}